[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\BTL_ESP\Test\ESP32\BTL_ESP\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/BTL_ESP/Test/ESP32/BTL_ESP/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/9] Building C object esp-idf/wifi/CMakeFiles/__idf_wifi.dir/wifi.c.obj
[3/9] Linking C static library esp-idf\wifi\libwifi.a
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Building C object CMakeFiles/BTL_ESP.elf.dir/project_elf_src_esp32.c.obj
[7/9] Linking CXX executable BTL_ESP.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/BTL_ESP/Test/ESP32/BTL_ESP/build/BTL_ESP.bin
[9/9] cmd.exe /C "cd /D D:\BTL_ESP\Test\ESP32\BTL_ESP\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/BTL_ESP/Test/ESP32/BTL_ESP/build/partition_table/partition-table.bin D:/BTL_ESP/Test/ESP32/BTL_ESP/build/BTL_ESP.bin"
BTL_ESP.bin binary size 0xafcb0 bytes. Smallest app partition is 0x100000 bytes. 0x50350 bytes (31%) free.
